name: Build & Deploy Tasky

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build & Deploy Tasky
    runs-on: ubuntu-latest
    env:
      AWS_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
      EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
      ECR_REPO:    ${{ secrets.ECR_REPO }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login, Build & Push Docker Image
        id: build-and-push
        run: |
          IMAGE_TAG=${GITHUB_SHA}
          docker build \
            -f docker/tasky-main/Dockerfile \
            -t $ECR_REPO:$IMAGE_TAG \
            docker/tasky-main

          docker tag $ECR_REPO:$IMAGE_TAG \
            ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

      - name: Bootstrap ALB Service Account
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION
          kubectl apply -f k8s/alb-sa.yaml

      - name: Deploy (app + ingress)
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION
          kubectl apply -f k8s/deployment.yaml \
                        -f k8s/service.yaml \
                        -f k8s/ingress.yaml

      - name: Verify Rollout
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION
          kubectl rollout status deployment/tasky -n default --timeout=2m