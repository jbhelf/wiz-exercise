name: Build & Deploy Tasky

on:
  push:
    branches:
      - main

env:
  AWS_DEFAULT_REGION: us-west-2
  CLUSTER_NAME: ${{ secrets.EKS_CLUSTER }}
  IMAGE_REPO: ${{ secrets.ECR_REPO }}

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      full_image: ${{ steps.tag-and-push.outputs.full_image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to ECR
        id: login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag
        id: build
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          IMAGE="${{ env.IMAGE_REPO }}:${IMAGE_TAG}"
          docker build -f docker/tasky-main/Dockerfile -t $IMAGE .
          echo "::set-output name=image::$IMAGE"

      - name: Push to ECR
        id: tag-and-push
        run: |
          IMAGE=${{ steps.build.outputs.image }}
          docker push $IMAGE
          echo "::set-output name=full_image::$IMAGE"

  deploy-to-k8s:
    name: Deploy to EKS
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      FULL_IMAGE: ${{ needs.build-and-push.outputs.full_image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.27.3'

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_DEFAULT_REGION }}

      - name: Apply ALB ServiceAccount & RBAC
        run: |
          kubectl apply --server-side --validate=false -f k8s/alb-sa.yaml
          kubectl apply --server-side --validate=false -f k8s/rbac.yaml

      - name: Deploy Tasky manifests
        run: |
          kubectl apply --server-side --validate=false -f k8s/deployment.yaml
          kubectl apply --server-side --validate=false -f k8s/service.yaml
          kubectl apply --server-side --validate=false -f k8s/ingress.yaml

      - name: Update image
        run: kubectl set image deployment/tasky tasky-container=$FULL_IMAGE -n default

      - name: Wait for rollout (120s timeout)
        run: |
          kubectl rollout status deployment/tasky -n default --timeout=120s

      - name: Debug on failure
        if: failure()
        run: |
          echo "=== Pod statuses ==="
          kubectl get pods -n default -l app=tasky -o wide
          echo "=== Pod events ==="
          POD=$(kubectl get pods -n default -l app=tasky -o jsonpath='{.items[0].metadata.name}')
          kubectl describe pod $POD -n default
          echo "=== Logs ==="
          kubectl logs $POD -n default