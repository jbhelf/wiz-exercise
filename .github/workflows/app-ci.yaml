name: Build & Deploy Tasky

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build & Deploy Tasky
    runs-on: ubuntu-latest
    env:
      AWS_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
      EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
      ECR_REPO:    ${{ secrets.ECR_REPO }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Build & Push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          REGISTRY=${{ steps.login-ecr.outputs.registry }}
          REPO_NAME=${{ secrets.ECR_REPO }}

          # build & tag with the full ECR registry path
          docker build \
            -f docker/tasky-main/Dockerfile \
            -t $REGISTRY/$REPO_NAME:$IMAGE_TAG \
            docker/tasky-main

          # push to ECR
          docker push $REGISTRY/$REPO_NAME:$IMAGE_TAG

      - name: Bootstrap ALB Service Account
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION
          kubectl apply -f k8s/alb-sa.yaml

      - name: Deploy (app + ingress)
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION
          kubectl apply -f k8s/deployment.yaml \
                        -f k8s/service.yaml \
                        -f k8s/ingress.yaml

      - name: Verify Rollout
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION
          kubectl rollout status deployment/tasky -n default --timeout=2m